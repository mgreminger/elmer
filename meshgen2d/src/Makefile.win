# Elmer Mesh generator Windows makefile
# Needs Gnu make!
# Martti Verho
# 25.03.99

# Updated for Mesh99
# Reino Ruusu
# 24.1.2000

# Target name changed to ElmerMesh2D
# Martti Verho
# 8.6.2003

# Set general environment
# =======================
ifeq ($(strip $(ELMER_PREFIX_S)),)
  ELMER_PREFIX_S := $(subst \,/,$(ELMER_PREFIX))
endif

# Path separator
PATH_SEP = $(strip \)
# =======================

TARGET = ElmerMesh2D$(DBG_EXT).exe
LINKOUT = /OUT:$(TARGET)

#-Search directory for Stl files
STL_INCLUDES =

INCLUDES = -I./include -I$(ELMER_PREFIX_S)/include $(STL_INCLUDES)
          
LIBRARIES = /LIBPATH:$(ELMER_PREFIX_S)/lib

OBJ_EXT = obj
C_EXT = c
CPP_EXT = cpp

CC = cl
C  = cl
LINK = link
AR = lib
CP = copy
RM = rm
MV = mv
      
# Compiler options
# -ML  for static single-threaded system library LIBC.LIB
# -MLd for static debug single-threaded system library LIBCD.IB
# -MT  for static multi-threaded system library LIBCMT.LIB
# -MTd for static debug multi-threaded system library LIBCMTD.IB

# Should we use threads
ifeq ($(strip $(MULTI_THREADED)),1)
 THREAD_FLAG = -MT
else
 THREAD_FLAG = -ML
endif

# Should we create debug version (names like *_g.*)
ifeq ($(strip $(DEBUG_VERSION)),1)
 OPTM = -Od
 DEBUG = -Z7
 DBG_EXT = _g
 DBG_FLAG = d
 DBG_MACRO = DEBUG
else
 OPTM =
 DEBUG =
 DBG_EXT =
 DBG_FLAG =
 DBG_MACRO = NDEBUG
endif

HASMINMAX = -D_NO_STD_MINMAX

CFLAGS = -nologo -DWIN32 -D_CONSOLE -D$(DBG_MACRO) -GX $(OPTM) $(DEBUG)\
 $(THREAD_FLAG)$(DBG_FLAG) $(HASMINMAX) $(CALL_CONV_$(BINDING)) -c

#LIBS = libeioC$(DBG_EXT).lib
#LIBS = libeioC.lib
LIBS =

#-Read objects and dependencies
include ./make.inc
