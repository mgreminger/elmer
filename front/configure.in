dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/ecif_main.cpp)

AC_CANONICAL_HOST
AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE(front, 5.5.0)

dnl Checks for programs.
AC_LANG_COMPILER
AM_SANITY_CHECK
AC_ISC_POSIX
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_HEADER_STDC
AC_C_BIGENDIAN

dnl look for default cc
AC_PROG_CPP
AC_PROG_CXX
AC_SUBST(AM_FCFLAGS) 
AM_MAINTAINER_MODE
AC_STDC_HEADERS

AC_PATH_X

AM_CONDITIONAL(HAVE_WINDRES, test `which windres` != "")

LIBS="$LIBS -L$prefix/lib "
CFLAGS="$CFLAGS -I$prefix/include"
CXXFLAGS="$CXXFLAGS -I$prefix/include"

AC_SUBST(prefix)
AC_DEFINE_UNQUOTED(ELMER_FRONT_PREFIX,"${prefix}", [Elmer Front installation prefix...])

sinclude(acx_elmer.m4)
sinclude(acx_gl.m4)

AC_CHECK_LIB(m, sin,,AC_MSG_ERROR(elmer fron the math library))
ACX_EIOC([], [AC_MSG_ERROR([libeioc not found, install it first.])])
ACX_MATC([], [AC_MSG_ERROR([libmatc $ELMER_LIBERRORMSG])])
ACX_CHECK_GL([],[AC_MSG_ERROR([OpenGL not found.])])
ACX_CHECK_GLU([],[AC_MSG_ERROR([GLU not found.])])
ACX_TCLTK([],[AC_MSG_ERROR([Tcl/tk not found.])])

AC_CHECK_LIB(stdc++, main)
AC_CHECK_LIB(dl, main)
AC_CHECK_LIB(X11, XGetErrorText)

LIBS="$LIBS $MATC_LIBS $EIOC_LIBS $LIBS $GL_LIBS $GLU_LIBS $TCLTK_LIBS"
ACX_PLATFORM_DEFS
if test "$acx_platform_def" = "WIN32"; then
  LIBS="$LIBS -lgdi32"
fi
CFLAGS="$CFLAGS $GL_CFLAGS $GLU_CFLAGS $TCLTK_INCLUDE"
CXXFLAGS="$CXXFLAGS $GL_CFLAGS $GLU_CFLAGS $TCLTK_INCLUDE"

dnl Checks for header files.

AC_CONFIG_HEADER(config.h) 
AC_OUTPUT([
Makefile
src/tcl/ecif_tcl_mainScript.tcl
include/Makefile
src/Makefile
])

AC_MSG_RESULT([
ElmerFront build options:
  Version                   $VERSION
  Install prefix            $prefix
  CFLAGS                    $CFLAGS
  CXXFLAGS                  $CXXFLAGS
  FCFLAGS                   $FCFLAGS

  LDFLAGS                   $LDFLAGS
  LIBS                      $LIBS

Compilers:
  Fortran 90 compiler       $FC
  CC                        $CC
  C++                       $CXX

Libs:  
  OpenGL                    $GL_LIBS $GLU_LIBS
  MATC			    $MATC_LIBS
  Tcl/Tk		    $TCLTK_LIBS
])
