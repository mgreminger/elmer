#/*****************************************************************************/
# *
# *  Elmer, A Finite Element Software for Multiphysical Problems
# *
# *  Copyright 1st April 1995 - , CSC - IT Center for Science Ltd., Finland
# * 
# *  This program is free software; you can redistribute it and/or
# *  modify it under the terms of the GNU General Public License
# *  as published by the Free Software Foundation; either version 2
# *  of the License, or (at your option) any later version.
# * 
# *  This program is distributed in the hope that it will be useful,
# *  but WITHOUT ANY WARRANTY; without even the implied warranty of
# *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# *  GNU General Public License for more details.
# *
# *  You should have received a copy of the GNU General Public License
# *  along with this program (in file fem/GPL-2); if not, write to the 
# *  Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, 
# *  Boston, MA 02110-1301, USA.
# *
# *****************************************************************************/
#
#/******************************************************************************
# *
# *  Makefile for ElmerSolver
# *
# ******************************************************************************
# *
# *  Authors: Juha Ruokolainen
# *  Email:   Juha.Ruokolainen@csc.fi
# *  Web:     http://www.csc.fi/elmer
# *  Address: CSC - IT Center for Science Ltd.
# *           Keilaranta 14
# *           02101 Espoo, Finland 
# *
# *  Original Date: 26.9.1995
# *
# *****************************************************************************/
LIB	      = libfem.a

ELMER_PREFIX = $(ELMER_HOME)
LIBDIR	= $(ELMER_PREFIX)/lib
BINDIR	= $(ELMER_PREFIX)/bin
INCLDIR = $(ELMER_PREFIX)/include

include make.bin
all:	$(LIB) $(SOLVER) $(BINARIES) $(BINARIES_ODD)

OBJ_EXT	=	.o
include make.inc
 
#F90	=	f90 -cpp -I. -std  -O0 -check bounds  -check underflow -check nopower #  -check arg_temp_created
F90	=	f90 -p -O5 -cpp  -I. -I$(INCLDIR) -check nopower -check nounderflow
F77	=	f77 -O -cpp -I.
CC	=	cc -I. -std -O

RM	=	/bin/rm
CP	=	/bin/cp
CPP	=	/usr/lib/cpp -C -Ddunix -DUSE_ARPACK -DUSE_SPARSE -DCYLSYM -DFULL_INDUCTION

.SUFFIXES: .f90

.f90.o:
	$(CPP) -I. -DDLLEXPORT="!" $< > $(TMPDIR)/$<
	$(F90)  -c  $(TMPDIR)/$<
	$(RM) $(TMPDIR)/$<
	ar r $(LIB) $@

.f.o:
	$(CPP) -I. -DDLLEXPORT="!" $< > $(TMPDIR)/$<
	$(F77) -c $(TMPDIR)/$<
	ar r $(LIB) $@

.c.o:
	$(CC) -c -O  $<
	ar r $(LIB) $@

$(LIB):	$(OBJS)

$(SOLVER): $(OBJS) $(LIB) Solver.o
	$(F90) -o $@  Solver.o  -LEIO -L. -L$(LIBDIR) -I. -lfem \
	-lfem  -lparpack -larpack -lhuti -ldxml -lsparse -lumfpack -lamd -leioF -lmatc -lcxxstd -lcxx -lpthreads -lmpi -lm -lots

Solver.o: Solver.f90 $(OBJS)
	$(F90) -c -O3 -c Solver.f90

$(RESULT): $(OBJS) $(LIB) ResultToResult.o
	$(F90) -o $@  ResultToResult.o  -LEIO -L. -L$(LIBDIR) -I. -lfem \
	-lfem -lparpack -larpack -lhuti -ldxml -lsparse -lumfpack -lamd -leioF -lmatc -lcxxstd -lcxx -lpthreads -lmpi -lm -lots

ResultToResult.o: ResultToResult.f90 $(OBJS)
	$(F90) -c -O3 -c ResultToResult.f90

#EigenSolve.o: EigenSolve.f90
#	$(CPP) -I. -DDLLEXPORT="!" $< > $(TMPDIR)/$<
#	$(F90) -O1 -c  $(TMPDIR)/$<
#	$(RM) $(TMPDIR)/$<
#	ar r $(LIB) $@

$(BINARIES): $(OBJS)
	for p in $(BINARIES); do \
		$(F90) -shared -o $${p} $${p}.f90; \
	done;

$(HELMHOLTZ_BEM): $(HELMHOLTZ_BEM).f90 $(OBJS)
	$(F90) -shared -o $(HELMHOLTZ_BEM) $(HELMHOLTZ_BEM).f90 solve_cmplx.f

$(POISSON_BEM): $(POISSON_BEM).f90 $(OBJS)
	$(F90) -shared -o $(POISSON_BEM) $(POISSON_BEM).f90 solve_real.f

$(SC2ELMER): $(SC2ELMER).c
	$(CC) -o SC2Elmer SC2Elmer.c -lm

$(MEMREYNO): $(MEMREYNO).f90 $(OBJS)
	$(F90) -c MEMUtilities.f90
	$(F90) -shared -o $(MEMREYNO) $(MEMREYNO).f90 MEMUtilities.o

$(MEMELSTAT): $(MEMELSTAT).f90 $(OBJS)
	$(F90) -c MEMUtilities.f90
	$(F90) -shared -o $(MEMELSTAT) $(MEMELSTAT).f90 MEMUtilities.o

install:
	$(MAKE) -f Makefile.dec
	$(CP) $(SOLVER)		$(INSTALLDIR)/bin/
	$(CP) $(BINARIES)	$(INSTALLDIR)/bin/
	$(CP) $(BINARIES_ODD)	$(INSTALLDIR)/bin/
	$(CP) libfem.a		$(INSTALLDIR)/lib/
	$(CP) elements.def	$(INSTALLDIR)/lib/
	$(CP) SOLVER.KEYWORDS	$(INSTALLDIR)/lib/
	$(CP) *.mod		$(INSTALLDIR)/include/

clean:
	/bin/rm $(ALL) *.o *.mod
