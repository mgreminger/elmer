# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/elmerf90-nosh.in $(srcdir)/elmerf90.in \
	$(srcdir)/elmerld.in $(srcdir)/make.dep $(srcdir)/make.lib
bin_PROGRAMS = SC2Elmer$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acx_elmer.m4 \
	$(top_srcdir)/acx_mpi.m4 $(top_srcdir)/acx_lapack.m4 \
	$(top_srcdir)/acx_blas.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = elmerf90 elmerf90-nosh elmerld
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_SC2Elmer_OBJECTS = SC2Elmer.$(OBJEXT)
SC2Elmer_OBJECTS = $(am_SC2Elmer_OBJECTS)
SC2Elmer_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(SC2Elmer_SOURCES)
DIST_SOURCES = $(SC2Elmer_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARFLAGS = @ARFLAGS@
ARPACK_LIBS = @ARPACK_LIBS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
B64FLAGS = @B64FLAGS@
BASIC_CPP = @BASIC_CPP@
BLAS_LIBS = @BLAS_LIBS@
BOURNE_SHELL = @BOURNE_SHELL@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CP = @CP@
CPICFLAG = @CPICFLAG@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXPICFLAG = @CXXPICFLAG@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLFCN_DIR = @DLFCN_DIR@
DL_LD = @DL_LD@
DL_LDFLAGS = @DL_LDFLAGS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EIOF_LIBS = @EIOF_LIBS@
EXEEXT = @EXEEXT@
EXTRA_LIBS = @EXTRA_LIBS@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCLIBS = @FCLIBS@
FCPPFLAGS = @FCPPFLAGS@
FFLAGS = @FFLAGS@
FLIBS = @FLIBS@
FORTRAN_CPP_FLAG = @FORTRAN_CPP_FLAG@
FPICFLAG = @FPICFLAG@
GREP = @GREP@
HUTI_LIBS = @HUTI_LIBS@
HYPRE_LIBS = @HYPRE_LIBS@
INCLUDE_MODULE_FLAG = @INCLUDE_MODULE_FLAG@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
LDFLAGS = @LDFLAGS@
LD_LIBRARY_PATH_VAR = @LD_LIBRARY_PATH_VAR@
LIBEXT = @LIBEXT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBSOLVER_DEPS = @LIBSOLVER_DEPS@
LN = @LN@
LONG_KIND = @LONG_KIND@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MATC_LIBS = @MATC_LIBS@
MESHGEN2D_LIBS = @MESHGEN2D_LIBS@
MKDIR = @MKDIR@
MKDIR_P = @MKDIR_P@
MKOCTFILE_DL_LDFLAGS = @MKOCTFILE_DL_LDFLAGS@
MPI_F90 = @MPI_F90@
MPI_INCLUDE_DIR = @MPI_INCLUDE_DIR@
MPI_LIBS = @MPI_LIBS@
MUMPS_LIBS = @MUMPS_LIBS@
MV = @MV@
NO_OCT_FILE_STRIP = @NO_OCT_FILE_STRIP@
OBJEXT = @OBJEXT@
OFF_KIND = @OFF_KIND@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PARPACK_LIBS = @PARPACK_LIBS@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
RLD_FLAG = @RLD_FLAG@
RM = @RM@
RPATH_ELMER = @RPATH_ELMER@
RPATH_FLAG = @RPATH_FLAG@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHLBIN = @SHLBIN@
SHLBIN_VER = @SHLBIN_VER@
SHLEXT = @SHLEXT@
SHLEXT_VER = @SHLEXT_VER@
SHLLIB = @SHLLIB@
SHLLIB_VER = @SHLLIB_VER@
SHLLINKEXT = @SHLLINKEXT@
SH_EXPALL_FLAG = @SH_EXPALL_FLAG@
SH_LD = @SH_LD@
SH_LD2 = @SH_LD2@
SH_LDFLAGS = @SH_LDFLAGS@
SH_LINKING_TO_FLAGS = @SH_LINKING_TO_FLAGS@
SOLVER_LIBS = @SOLVER_LIBS@
SOLVER_MPI_LIBS = @SOLVER_MPI_LIBS@
SONAME_FLAGS = @SONAME_FLAGS@
STDCXX_LIBS = @STDCXX_LIBS@
STRIP = @STRIP@
TEMPLATE_AR = @TEMPLATE_AR@
TEMPLATE_ARFLAGS = @TEMPLATE_ARFLAGS@
TESTS_FCFLAGS = @TESTS_FCFLAGS@
UMFPACK_LIBS = @UMFPACK_LIBS@
UNIX_MATH_LIB = @UNIX_MATH_LIB@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
canonical_host_type = @canonical_host_type@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
lib_mpi = @lib_mpi@
libdir = @libdir@
libexecdir = @libexecdir@
library_path_var = @library_path_var@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
modput_opt = @modput_opt@
mpi_dir = @mpi_dir@
mpi_inc_dir = @mpi_inc_dir@
mpi_include = @mpi_include@
mpi_lib_dir = @mpi_lib_dir@
mpi_library = @mpi_library@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = view3d viewaxis binio . modules
OBJ_EXT = .$(OBJEXT)
SHL_EXT = .$(SHLEXT)
LIB_EXT = .$(LIBEXT)
EXE_EXT = $(EXEEXT)
SOLVEROBJS = \
		NavierStokes$(OBJ_EXT)				\
		NavierStokesGeneral$(OBJ_EXT)	     		\
		NavierStokesCylindrical$(OBJ_EXT)		\
		Lists$(OBJ_EXT)					\
		DiffuseConvectiveAnisotropic$(OBJ_EXT)		\
		DiffuseConvectiveGeneralAnisotropic$(OBJ_EXT)	\
		PElementMaps$(OBJ_EXT)				\
		PElementBase$(OBJ_EXT)				\
		ElementDescription$(OBJ_EXT)			\
		Integration$(OBJ_EXT)				\
		ModelDescription$(OBJ_EXT)			\
		GeneralUtils$(OBJ_EXT)				\
		Stress$(OBJ_EXT)				\
		StressGeneral$(OBJ_EXT)				\
		LinearAlgebra$(OBJ_EXT)		 	        \
		CoordinateSystems$(OBJ_EXT)			\
		ListMatrix$(OBJ_EXT)				\
		CRSMatrix$(OBJ_EXT)				\
		BandMatrix$(OBJ_EXT)				\
		BandwidthOptimize$(OBJ_EXT)			\
		BlockSolve$(OBJ_EXT)				\
		MaterialModels$(OBJ_EXT)			\
		DirectSolve$(OBJ_EXT)				\
		IterSolve$(OBJ_EXT)				\
		IterativeMethods$(OBJ_EXT)			\
		TimeIntegrate$(OBJ_EXT)				\
		Types$(OBJ_EXT)					\
		SolveBand$(OBJ_EXT)				\
		ElementUtils$(OBJ_EXT)				\
		Radiation$(OBJ_EXT)				\
		fft$(OBJ_EXT)					\
		Load$(OBJ_EXT)					\
		Differentials$(OBJ_EXT)				\
		FreeSurface$(OBJ_EXT)				\
		Maxwell$(OBJ_EXT)				\
		MaxwellAxiS$(OBJ_EXT)				\
		MaxwellGeneral$(OBJ_EXT)			\
		Walls$(OBJ_EXT)					\
		SolverUtils$(OBJ_EXT)				\
		SolveSBand$(OBJ_EXT)				\
		CPUTime$(OBJ_EXT)				\
		Interpolation$(OBJ_EXT)				\
		MainUtils$(OBJ_EXT)				\
		Adaptive$(OBJ_EXT)				\
		EigenSolve$(OBJ_EXT)				\
		HashTable$(OBJ_EXT)				\
		MeshUtils$(OBJ_EXT)				\
		SParIterGlobals$(OBJ_EXT)			\
		SParIterComm$(OBJ_EXT)				\
		SParIterPrecond$(OBJ_EXT)			\
		SParIterSolver$(OBJ_EXT)			\
		Messages$(OBJ_EXT)				\
		Multigrid$(OBJ_EXT)				\
		Smoothers$(OBJ_EXT)				\
		ClusteringMethods$(OBJ_EXT)			\
		ParallelUtils$(OBJ_EXT)                         \
                ParallelEigenSolve$(OBJ_EXT)			\
		solve_cmplx$(OBJ_EXT)				\
		solve_real$(OBJ_EXT)				\
		MGPrec$(OBJ_EXT)				\
		DefUtils$(OBJ_EXT)				\
		LUDecomposition$(OBJ_EXT) 			\
	        RadiationFactors$(OBJ_EXT)                      \
		f_stubs$(OBJ_EXT)				\
		ExchangeCorrelations$(OBJ_EXT)			\
		SolveHypre$(OBJ_EXT)				\
		SolveTrilinos$(OBJ_EXT)				\
		SolveSuperLU$(OBJ_EXT)				\
		iso_varying_string$(OBJ_EXT)			\
		umf4_f77wrapper$(OBJ_EXT)			\
		VankaCreate$(OBJ_EXT)				\
		ParticleUtils$(OBJ_EXT)				\
		Feti$(OBJ_EXT)					\
                cholmod$(OBJ_EXT)				\
		InterpolateMeshToMesh$(OBJ_EXT)			\
		BackwardError$(OBJ_EXT)				\
                SolverActivate_x$(OBJ_EXT)			\
		ElmerSolver$(OBJ_EXT)

NORMAL_TARGETS = mpif libelmersolver$(SHL_EXT) ElmerSolver$(EXE_EXT) ViewFactors$(EXE_EXT) GebhardtFactors$(EXE_EXT)
MPI_TARGETS = ElmerSolver_mpi$(EXE_EXT)
@USE_MPI_FALSE@ELMER_TARGETS = $(NORMAL_TARGETS)
@USE_MPI_TRUE@ELMER_TARGETS = $(NORMAL_TARGETS) $(MPI_TARGETS)
ELMER_SOLVER_DATADIR = $(prefix)/share/elmersolver
SC2Elmer_SOURCES = SC2Elmer.c
EXTRA_DIST = \
	Adaptive.src \
	AdvectionDiffusion.src \
	AdvectionReaction.src \
	ArteryOutlet.src \
	ArtificialCompressibility.src \
	BandMatrix.src \
	BandwidthOptimize.src \
	BlockSolve.src \
        cholmod.c	      \
	ClusteringMethods.src \
	CoordinateSystems.src \
	CPUTime.c \
	CRSMatrix.src \
	DataToFieldSolver.src \
	DCRComplexSolve.src \
	DefUtils.src \
	DFTSolver.src \
	Differentials.src \
	DiffuseConvectiveAnisotropic.src \
	DiffuseConvectiveGeneralAnisotropic.src \
	DirectSolve.src \
	DistanceSolve.src \
	DivergenceSolver.src \
	EigenSolve.src \
	ElasticSolve.src \
	ElectricForce.src \
	Electrokinetics.src \
	ElementDescription.src \
	ElementUtils.src \
	EliminateDirichlet.src \
	EliminatePeriodic.src \
	ElmerSolver.src \
	EnergyRelease.src \
	FDiffusion3D.src \
	FilterTimeSeries.src \
	ExchangeCorrelations.src \
	fft.c \
	FDiffusion.src \
	Feti.src \
	FindOptimum.src \
	FlowSolve.src \
	FluidicForce.src \
	FluxSolver.src \
	FreeSurface.src \
	FreeSurfaceReduced.src \
	FreeSurfaceSolver.src \
	PhaseChangeSolve.src \
	GebhardtFactors.src \
	GeneralUtils.src \
	HashTable.src \
	HeatSolve.src \
	HelmholtzBEM.src \
	HelmholtzSolve.src \
	Integration.src \
	Interpolation.src \
	Isosurface.src \
	IterSolve.src \
	IterativeMethods.src \
	KESolver.src \
	LevelSet.src \
	LinearAlgebra.src \
	ListMatrix.src \
	Lists.src \
	Load.c \
	LUDecomposition.src \
	MagneticSolve.src \
	MagneticW1Solve.src \
	MainUtils.src \
	MaterialModels.src \
	MaxwellAxiS.src \
	Maxwell.src \
	MaxwellGeneral.src \
	MeshSolve.src \
	MeshUtils.src \
	Messages.src \
	MagnetoDynamics.src \
	MGPrec.src \
	ModelDescription.src \
	MovingElstatSolver.src \
	mpif_stub.h \
	mpi_stubs.c \
	Multigrid.src \
	NavierStokesCylindrical.src \
	NavierStokes.src \
	NavierStokesGeneral.src \
	NonphysicalMeshSolve.src \
	NormalSolver.src \
	ParallelEigenSolve.src \
	ParticleAdvector.src \
	ParticleDynamics.src \
	ParticleUtils.src \
	PElementBase.src \
	PElementMaps.src \
	PoissonBEM.src \
	PoissonBoltzmannSolve.src \
	PhaseChangeSolve.src \
	Radiation.src \
	RadiationFactors.src \
	RateOfChange.src \
	ReloadData.src \
	ReloadInput.src \
	ResultOutputSolve.src \
	ResultToPost.src \
	ResultToResult.src \
	ReynoldsSolver.src \
	RichardsSolver.src \
	RigidBodyReduction.src \
	RigidMeshMapper.src \
	SaveData.src \
	SaveGridData.src \
	ScalarPotentialSolver.src \
	ShearrateSolver.src \
	ShellSolve.src \
	Smitc.src \
	Smoothers.src \
	SolveBand.src \
	solve_cmplx.src \
	solve_real.src \
	Solver.src \
	SolverUtils.src \
	SolveSBand.src \
	SolveHypre.c   \
	SolveTrilinos.cxx   \
	SolveSuperLU.c \
	Spalart-Allmaras.src\
	SParIterComm.src \
	SParIterGlobals.src \
	SParIterPrecond.src \
	SParIterSolver.src \
	SSTKomega.src \
	StatCurrentSolve.src \
	StatElecBoundary.src \
	StatElecSolve.src \
	StatMagSolve.src \
	SteadyPhaseChange.src \
	Stokes.src \
	StreamSolver.src \
	Stress.src \
	StressGeneral.src \
	StressSolve.src \
	StucturedFlowLine.src \
	StructuredMeshMapper.src \
	ThermoElectricSolver.src \
	TimeIntegrate.src \
	TransportEquation.src \
	TransientPhaseChange.src \
	Types.src \
	V2FSolver.src \
	Komega.src \
	SSTKomega.src \
	VankaCreate.src \
	ViewFactors.src \
	VorticitySolver.src \
	Walls.src \
	iso_varying_string.src \
	elements.def \
	f_stubs.c    \
	elmerf90.in  \
	elmerld.in  \
	elmerf90-nosh.in  \
	umf4_f77wrapper.c \
	SOLVER.KEYWORDS

all: all-recursive

.SUFFIXES:
.SUFFIXES: .$(OBJEXT) .$(SHLEXT) .c .cxx .f90 .o .obj .src
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/make.lib $(srcdir)/make.dep $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
elmerf90: $(top_builddir)/config.status $(srcdir)/elmerf90.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
elmerf90-nosh: $(top_builddir)/config.status $(srcdir)/elmerf90-nosh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
elmerld: $(top_builddir)/config.status $(srcdir)/elmerld.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
SC2Elmer$(EXEEXT): $(SC2Elmer_OBJECTS) $(SC2Elmer_DEPENDENCIES) 
	@rm -f SC2Elmer$(EXEEXT)
	$(LINK) $(SC2Elmer_OBJECTS) $(SC2Elmer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SC2Elmer.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) all-local
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-data-local

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-exec-local

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am all-local check check-am clean clean-binPROGRAMS \
	clean-generic clean-local ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-local install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS

Adaptive.$(OBJEXT): Adaptive.f90 CRSMatrix.$(OBJEXT) ModelDescription.$(OBJEXT) GeneralUtils.$(OBJEXT) Types.$(OBJEXT) SolverUtils.$(OBJEXT)
BackwardError.$(OBJEXT): BackwardError.f90 ParallelUtils.$(OBJEXT)
BandMatrix.$(OBJEXT): BandMatrix.f90 GeneralUtils.$(OBJEXT) Types.$(OBJEXT)
BandwidthOptimize.$(OBJEXT): BandwidthOptimize.f90 SParIterGlobals.$(OBJEXT) ElementDescription.$(OBJEXT)
BlockSolve.$(OBJEXT): BlockSolve.f90 DefUtils.$(OBJEXT)
CoordinateSystems.$(OBJEXT): CoordinateSystems.f90 Types.$(OBJEXT)
CRSMatrix.$(OBJEXT): CRSMatrix.f90 GeneralUtils.$(OBJEXT)  Lists.$(OBJEXT)
DefUtils.$(OBJEXT): DefUtils.f90 PElementMaps.$(OBJEXT) Adaptive.$(OBJEXT) Integration.$(OBJEXT) Types.$(OBJEXT) SolverUtils.$(OBJEXT)
Differentials.$(OBJEXT): Differentials.f90 ElementDescription.$(OBJEXT) LinearAlgebra.$(OBJEXT) Lists.$(OBJEXT) Types.$(OBJEXT)
DiffuseConvectiveAnisotropic.$(OBJEXT): DiffuseConvectiveAnisotropic.f90 MaterialModels.$(OBJEXT) Differentials.$(OBJEXT) Integration.$(OBJEXT)
DiffuseConvectiveGeneralAnisotropic.$(OBJEXT): DiffuseConvectiveGeneralAnisotropic.f90 MaterialModels.$(OBJEXT) Differentials.$(OBJEXT) Integration.$(OBJEXT)
DirectSolve.$(OBJEXT): DirectSolve.f90 SParIterGlobals.$(OBJEXT) BandMatrix.$(OBJEXT) Lists.$(OBJEXT) SParIterSolver.$(OBJEXT) CRSMatrix.$(OBJEXT) Types.$(OBJEXT)
EigenSolve.$(OBJEXT): EigenSolve.f90 CRSMatrix.$(OBJEXT) IterSolve.$(OBJEXT) ElementUtils.$(OBJEXT) Multigrid.$(OBJEXT) Types.$(OBJEXT)
ElementDescription.$(OBJEXT): ElementDescription.f90 PElementBase.$(OBJEXT) GeneralUtils.$(OBJEXT) Integration.$(OBJEXT) PElementMaps.$(OBJEXT) LinearAlgebra.$(OBJEXT) CoordinateSystems.$(OBJEXT)
ElementUtils.$(OBJEXT): ElementUtils.f90 DirectSolve.$(OBJEXT) BandMatrix.$(OBJEXT) Integration.$(OBJEXT) Lists.$(OBJEXT) BandwidthOptimize.$(OBJEXT) ListMatrix.$(OBJEXT) CRSMatrix.$(OBJEXT) Interpolation.$(OBJEXT)
ElmerSolver.$(OBJEXT): ElmerSolver.f90 DefUtils.$(OBJEXT) MainUtils.$(OBJEXT)
ExchangeCorrelations.$(OBJEXT): ExchangeCorrelations.f90
FDiffusion3D.$(OBJEXT): FDiffusion3D.f90 DefUtils.$(OBJEXT)
FDiffusion.$(OBJEXT): FDiffusion.f90 DefUtils.$(OBJEXT)
Feti.$(OBJEXT): Feti.f90 DefUtils.$(OBJEXT)
FilterTimeSeries.$(OBJEXT): FilterTimeSeries.f90 DefUtils.$(OBJEXT)
FindOptimum.$(OBJEXT): FindOptimum.f90 DefUtils.$(OBJEXT)
FreeSurface.$(OBJEXT): FreeSurface.f90 DefUtils.$(OBJEXT) IterSolve.$(OBJEXT) ElementUtils.$(OBJEXT) DirectSolve.$(OBJEXT)
GebhardtFactors.$(OBJEXT): GebhardtFactors.f90 ModelDescription.$(OBJEXT) Lists.$(OBJEXT) IterSolve.$(OBJEXT) ElementDescription.$(OBJEXT) CoordinateSystems.$(OBJEXT) CRSMatrix.$(OBJEXT) MainUtils.$(OBJEXT) Types.$(OBJEXT) SolverUtils.$(OBJEXT)
GeneralUtils.$(OBJEXT): GeneralUtils.f90 Types.$(OBJEXT)
HashTable.$(OBJEXT): HashTable.f90 Lists.$(OBJEXT)
Integration.$(OBJEXT): Integration.f90 LinearAlgebra.$(OBJEXT) Types.$(OBJEXT)
InterpolateMeshToMesh.$(OBJEXT): InterpolateMeshToMesh.f90 DefUtils.$(OBJEXT)
Interpolation.$(OBJEXT): Interpolation.f90 ElementDescription.$(OBJEXT) CoordinateSystems.$(OBJEXT) Types.$(OBJEXT)
iso_varying_string.$(OBJEXT): iso_varying_string.f90
IterativeMethods.$(OBJEXT): IterativeMethods.f90 CRSMatrix.$(OBJEXT) Types.$(OBJEXT)
IterSolve.$(OBJEXT): IterSolve.f90 ListMatrix.$(OBJEXT) SParIterGlobals.$(OBJEXT) BandMatrix.$(OBJEXT) Lists.$(OBJEXT) IterativeMethods.$(OBJEXT) CRSMatrix.$(OBJEXT) Types.$(OBJEXT)
LinearAlgebra.$(OBJEXT): LinearAlgebra.f90 Types.$(OBJEXT)
ListMatrix.$(OBJEXT): ListMatrix.f90 CRSMatrix.$(OBJEXT) GeneralUtils.$(OBJEXT)
Lists.$(OBJEXT): Lists.f90 GeneralUtils.$(OBJEXT) Messages.$(OBJEXT) PElementMaps.$(OBJEXT) CoordinateSystems.$(OBJEXT) Types.$(OBJEXT) Interpolation.$(OBJEXT) SParIterComm.$(OBJEXT)
LUDecomposition.$(OBJEXT): LUDecomposition.f90 Types.$(OBJEXT)
MagneticSolve.$(OBJEXT): MagneticSolve.f90 MaxwellGeneral.$(OBJEXT) Maxwell.$(OBJEXT) Differentials.$(OBJEXT) DefUtils.$(OBJEXT) MaxwellAxiS.$(OBJEXT)
MainUtils.$(OBJEXT): MainUtils.f90 BlockSolve.$(OBJEXT) DefUtils.$(OBJEXT) ModelDescription.$(OBJEXT) Types.$(OBJEXT) SolverUtils.$(OBJEXT)
MaterialModels.$(OBJEXT): MaterialModels.f90 DefUtils.$(OBJEXT) ModelDescription.$(OBJEXT) Types.$(OBJEXT)
MaxwellAxiS.$(OBJEXT): MaxwellAxiS.f90 ElementDescription.$(OBJEXT) Integration.$(OBJEXT) Types.$(OBJEXT)
MaxwellGeneral.$(OBJEXT): MaxwellGeneral.f90 ElementDescription.$(OBJEXT) Integration.$(OBJEXT)
Maxwell.$(OBJEXT): Maxwell.f90 ElementDescription.$(OBJEXT) Integration.$(OBJEXT)
MeshUtils.$(OBJEXT): MeshUtils.f90 PElementBase.$(OBJEXT) ParallelUtils.$(OBJEXT) ElementUtils.$(OBJEXT) PElementMaps.$(OBJEXT) ElementDescription.$(OBJEXT) Types.$(OBJEXT)
Messages.$(OBJEXT): Messages.f90
MGPrec.$(OBJEXT): MGPrec.f90 Multigrid.$(OBJEXT)
ModelDescription.$(OBJEXT): ModelDescription.f90 MeshUtils.$(OBJEXT) ElementDescription.$(OBJEXT) HashTable.$(OBJEXT) Types.$(OBJEXT)
Multigrid.$(OBJEXT): Multigrid.f90 MeshUtils.$(OBJEXT) DirectSolve.$(OBJEXT) IterSolve.$(OBJEXT) ClusteringMethods.$(OBJEXT) Smoothers.$(OBJEXT) CoordinateSystems.$(OBJEXT) CRSMatrix.$(OBJEXT) ModelDescription.$(OBJEXT) Interpolation.$(OBJEXT)
NavierStokesCylindrical.$(OBJEXT): NavierStokesCylindrical.f90 DefUtils.$(OBJEXT) MaterialModels.$(OBJEXT) Differentials.$(OBJEXT) ElementUtils.$(OBJEXT)
NavierStokesGeneral.$(OBJEXT): NavierStokesGeneral.f90 MaterialModels.$(OBJEXT) Differentials.$(OBJEXT) CoordinateSystems.$(OBJEXT) Integration.$(OBJEXT)
NavierStokes.$(OBJEXT): NavierStokes.f90 DefUtils.$(OBJEXT) MaterialModels.$(OBJEXT) Differentials.$(OBJEXT) ElementUtils.$(OBJEXT)
NonphysicalMeshSolve.$(OBJEXT): NonphysicalMeshSolve.f90 DefUtils.$(OBJEXT)
ParallelEigenSolve.$(OBJEXT): ParallelEigenSolve.f90 CRSMatrix.$(OBJEXT) IterSolve.$(OBJEXT) Multigrid.$(OBJEXT) ParallelUtils.$(OBJEXT)
ParallelUtils.$(OBJEXT): ParallelUtils.f90 SParIterSolver.$(OBJEXT)
ParticleUtils.$(OBJEXT): ParticleUtils.f90 DefUtils.$(OBJEXT)
PElementBase.$(OBJEXT): PElementBase.f90 PElementMaps.$(OBJEXT) Messages.$(OBJEXT) Types.$(OBJEXT)
PElementMaps.$(OBJEXT): PElementMaps.f90 Types.$(OBJEXT)
RadiationFactors.$(OBJEXT): RadiationFactors.f90 ModelDescription.$(OBJEXT) GeneralUtils.$(OBJEXT) DefUtils.$(OBJEXT) ElementUtils.$(OBJEXT) Lists.$(OBJEXT) IterSolve.$(OBJEXT) ElementDescription.$(OBJEXT) CoordinateSystems.$(OBJEXT) CRSMatrix.$(OBJEXT) MainUtils.$(OBJEXT) Types.$(OBJEXT) SolverUtils.$(OBJEXT)
Radiation.$(OBJEXT): Radiation.f90 DefUtils.$(OBJEXT) ElementUtils.$(OBJEXT) CoordinateSystems.$(OBJEXT)
ResultToPost.$(OBJEXT): ResultToPost.f90 MainUtils.$(OBJEXT)
ResultToResult.$(OBJEXT): ResultToResult.f90 SParIterGlobals.$(OBJEXT) ModelDescription.$(OBJEXT) Integration.$(OBJEXT) Lists.$(OBJEXT) SParIterSolver.$(OBJEXT) ElementDescription.$(OBJEXT) CoordinateSystems.$(OBJEXT) SParIterComm.$(OBJEXT) MainUtils.$(OBJEXT) Types.$(OBJEXT) Interpolation.$(OBJEXT)
Smoothers.$(OBJEXT): Smoothers.f90 CRSMatrix.$(OBJEXT) LinearAlgebra.$(OBJEXT) Lists.$(OBJEXT) Types.$(OBJEXT) ParallelUtils.$(OBJEXT) MeshUtils.$(OBJEXT)
ClusteringMethods.$(OBJEXT): ClusteringMethods.f90 CRSMatrix.$(OBJEXT) MeshUtils.$(OBJEXT)
SolveBand.$(OBJEXT): SolveBand.f90 Types.$(OBJEXT)
solve_cmplx.$(OBJEXT): solve_cmplx.f90 Types.$(OBJEXT)
solve_real.$(OBJEXT): solve_real.f90
Solver.$(OBJEXT): Solver.f90 GeneralUtils.$(OBJEXT) ParallelUtils.$(OBJEXT) Types.$(OBJEXT)
SolverActivate_x.$(OBJEXT): SolverActivate_x.f90 MainUtils.$(OBJEXT)
SolverUtils.$(OBJEXT): SolverUtils.f90  Multigrid.$(OBJEXT) EigenSolve.$(OBJEXT) ParallelUtils.$(OBJEXT) DirectSolve.$(OBJEXT) ElementUtils.$(OBJEXT) ParallelEigenSolve.$(OBJEXT) IterSolve.$(OBJEXT) MeshUtils.$(OBJEXT) LinearAlgebra.$(OBJEXT) TimeIntegrate.$(OBJEXT) ModelDescription.$(OBJEXT) Types.$(OBJEXT)
SolveSBand.$(OBJEXT): SolveSBand.f90 Types.$(OBJEXT)
SParIterComm.$(OBJEXT): SParIterComm.f90 SParIterGlobals.$(OBJEXT) GeneralUtils.$(OBJEXT) Types.$(OBJEXT)
SParIterGlobals.$(OBJEXT): SParIterGlobals.f90 Types.$(OBJEXT)
SParIterPrecond.$(OBJEXT): SParIterPrecond.f90 SParIterGlobals.$(OBJEXT) SParIterComm.$(OBJEXT) Types.$(OBJEXT)
SParIterSolver.$(OBJEXT): SParIterSolver.f90 SParIterGlobals.$(OBJEXT) Lists.$(OBJEXT) IterSolve.$(OBJEXT) CRSMatrix.$(OBJEXT) SParIterComm.$(OBJEXT) SParIterPrecond.$(OBJEXT) Types.$(OBJEXT) ListMatrix.$(OBJEXT)
StressGeneral.$(OBJEXT): StressGeneral.f90 ElementDescription.$(OBJEXT) CoordinateSystems.$(OBJEXT) Integration.$(OBJEXT)
StressSolve.$(OBJEXT): StressSolve.f90 Stress.$(OBJEXT) DefUtils.$(OBJEXT) StressGeneral.$(OBJEXT) CoordinateSystems.$(OBJEXT) Adaptive.$(OBJEXT) Types.$(OBJEXT)
Stress.$(OBJEXT): Stress.f90 ElementUtils.$(OBJEXT) ElementDescription.$(OBJEXT) Integration.$(OBJEXT) Lists.$(OBJEXT)
TimeIntegrate.$(OBJEXT): TimeIntegrate.f90 Lists.$(OBJEXT) Types.$(OBJEXT)
Types.$(OBJEXT): Types.f90 iso_varying_string.$(OBJEXT) Messages.$(OBJEXT)
V2FSolver.$(OBJEXT): V2FSolver.f90 DefUtils.$(OBJEXT) MaterialModels.$(OBJEXT)
VankaCreate.$(OBJEXT): VankaCreate.f90 DefUtils.$(OBJEXT)
ViewFactors.$(OBJEXT): ViewFactors.f90 DefUtils.$(OBJEXT) Types.$(OBJEXT)
Walls.$(OBJEXT): Walls.f90

all-local: $(ELMER_TARGETS)

SUFFIXES: .f90 .so .src .cpp

# Use basic CPP
@USE_CPP_TRUE@.src.f90:
@USE_CPP_TRUE@	$(CPP) $(FCPPFLAGS) $< > $*.f90

@USE_CPP_TRUE@.f90.$(OBJEXT):
@USE_CPP_TRUE@	$(FC) $(FCFLAGS) -c $<
# Use fortran built-in cpp
@USE_CPP_FALSE@.src.f90:
@USE_CPP_FALSE@	$(CP) $< $*.f90

@USE_CPP_FALSE@.f90.$(OBJEXT):
@USE_CPP_FALSE@	$(FC) $(FCFLAGS) $(FORTRAN_CPP_FLAG) $(FCPPFLAGS) -c $<

.cxx.$(OBJEXT):
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $<

nofdeps:
	sed -e "s/^\([^:^#]*\...OBJEXT.: \)/#\1/g" Makefile > Makefile.nodeps
	mv Makefile.nodeps Makefile

# remove cross dependencies from fortran files
fdeps:
	sed -e 's/^#\([^:]*\...OBJEXT.: \)/\1/g' Makefile > Makefile.deps
	mv Makefile.deps Makefile

@USE_WINDOWS_COMPILER_TRUE@.$(OBJEXT).$(SHLEXT): 
@USE_WINDOWS_COMPILER_TRUE@	$(SH_LD) $(SH_LDFLAGS) $(SH_LINKING_TO_FLAGS) $(B64FLAGS) -o $@ $*$(OBJ_EXT) $(EXTRA_LIBS) -L. -lelmersolver

@USE_WINDOWS_COMPILER_TRUE@EliminatePeriodic.$(SHLEXT): EliminateDirichlet$(OBJ_EXT) EliminatePeriodic$(OBJ_EXT)
@USE_WINDOWS_COMPILER_TRUE@	$(SH_LD) $(SH_LDFLAGS) $(SH_LINKING_TO_FLAGS) $(B64FLAGS) -o $@ $*$(OBJ_EXT) $(EXTRA_LIBS) EliminateDirichlet$(OBJ_EXT) -L. -lelmersolver

@USE_MPI_TRUE@@USE_WINDOWS_COMPILER_TRUE@libelmersolver$(SHL_EXT): $(SOLVEROBJS) binio/libbinio.a
@USE_MPI_TRUE@@USE_WINDOWS_COMPILER_TRUE@	$(RM) $@
@USE_MPI_TRUE@@USE_WINDOWS_COMPILER_TRUE@	$(SH_LD2) $(SH_LDFLAGS) $(B64FLAGS) $(LDFLAGS) -o $@ $(SOLVEROBJS) $(SOLVER_LIBS) $(MPI_LIBS) -L. -Lbinio -lbinio
@USE_MPI_FALSE@@USE_WINDOWS_COMPILER_TRUE@libelmersolver$(SHL_EXT): $(SOLVEROBJS) mpi_stubs$(OBJ_EXT) binio/libbinio.a
@USE_MPI_FALSE@@USE_WINDOWS_COMPILER_TRUE@	$(RM) $@
@USE_MPI_FALSE@@USE_WINDOWS_COMPILER_TRUE@	$(SH_LD2) $(SH_LDFLAGS) $(B64FLAGS) $(LDFLAGS) -o $@ $(SOLVEROBJS) $(SOLVER_LIBS) mpi_stubs$(OBJ_EXT) -L. -Lbinio -lbinio

@USE_WINDOWS_COMPILER_FALSE@libelmersolver$(SHL_EXT): $(SOLVEROBJS) binio/libbinio.a
@USE_WINDOWS_COMPILER_FALSE@	$(RM) $@
@MAC_OSX_TRUE@@USE_WINDOWS_COMPILER_FALSE@	$(SH_LD2) $(RPATH_ELMER) $(SH_LDFLAGS) $(B64FLAGS) $(LDFLAGS) -Wl,-dylib_install_name,libelmersolver-$(VERSION)$(SHL_EXT) -o libelmersolver-$(VERSION)$(SHL_EXT) $(SOLVEROBJS) $(SOLVER_LIBS) -L. -Lbinio -lbinio
@IBM_AIX_TRUE@@MAC_OSX_FALSE@@USE_WINDOWS_COMPILER_FALSE@	$(SH_LD2) $(RPATH_ELMER) $(SH_LDFLAGS) $(B64FLAGS) $(LDFLAGS) -o libelmersolver-$(VERSION)$(SHL_EXT) $(SOLVEROBJS) $(SOLVER_LIBS) -L. -Lbinio -lbinio
@IBM_AIX_FALSE@@MAC_OSX_FALSE@@USE_WINDOWS_COMPILER_FALSE@	$(SH_LD2) $(RPATH_ELMER) $(SH_LDFLAGS) $(B64FLAGS) $(LDFLAGS)  -Wl,-soname,libelmersolver-$(VERSION)$(SHL_EXT) -o libelmersolver-$(VERSION)$(SHL_EXT) $(SOLVEROBJS) $(SOLVER_LIBS) -L. -Lbinio -lbinio
@USE_WINDOWS_COMPILER_FALSE@	$(LN) -s libelmersolver-$(VERSION)$(SHL_EXT) $@

@USE_WINDOWS_COMPILER_FALSE@.$(OBJEXT).$(SHLEXT): 
@USE_WINDOWS_COMPILER_FALSE@	$(SH_LD) $(SH_LDFLAGS) $(SH_LINKING_TO_FLAGS) $(B64FLAGS) -o $@ $*$(OBJ_EXT) $(EXTRA_LIBS)

$(SOLVEROBJS): mpif

# the only way I got ibm MPI working was with mpxlf90...
@IBM_AIX_TRUE@@USE_MPI_TRUE@ElmerSolver_mpi$(EXE_EXT): Solver$(OBJ_EXT) libelmersolver$(SHL_EXT)
@IBM_AIX_TRUE@@USE_MPI_TRUE@	$(MPI_F90) $(SH_LINKING_TO_FLAGS) $(RPATH_ELMER) $(B64FLAGS) $(LDFLAGS) -o ElmerSolver_mpi$(EXE_EXT) \
@IBM_AIX_TRUE@@USE_MPI_TRUE@		   Solver$(OBJ_EXT) -L. -lelmersolver $(MPI_LIBS) $(EXTRA_LIBS)
@IBM_AIX_FALSE@@USE_MPI_TRUE@ElmerSolver_mpi$(EXE_EXT): Solver$(OBJ_EXT) libelmersolver$(SHL_EXT)
@IBM_AIX_FALSE@@USE_MPI_TRUE@	$(FC) $(SH_LINKING_TO_FLAGS) $(RPATH_ELMER) $(B64FLAGS) $(LDFLAGS) \
@IBM_AIX_FALSE@@USE_MPI_TRUE@	      -o ElmerSolver_mpi$(EXE_EXT) Solver$(OBJ_EXT) \
@IBM_AIX_FALSE@@USE_MPI_TRUE@	      -L. -lelmersolver $(MPI_LIBS) $(EXTRA_LIBS)

ElmerSolver$(EXE_EXT): Solver$(OBJ_EXT) libelmersolver$(SHL_EXT) mpi_stubs$(OBJ_EXT)
	$(FC) $(SH_LINKING_TO_FLAGS) $(RPATH_ELMER) $(B64FLAGS) $(LDFLAGS) \
	      -o ElmerSolver$(EXE_EXT) Solver$(OBJ_EXT) mpi_stubs$(OBJ_EXT) \
	      -L. -lelmersolver $(EXTRA_LIBS) 

ViewFactors$(EXE_EXT): libelmersolver$(SHL_EXT) ViewFactors$(OBJ_EXT) mpi_stubs$(OBJ_EXT)
@USE_WINDOWS_COMPILER_TRUE@	$(FC) $(SH_LINKING_TO_FLAGS) $(RPATH_ELMER) $(B64FLAGS) $(LDFLAGS) \
@USE_WINDOWS_COMPILER_TRUE@	      -o ViewFactors$(EXE_EXT) ViewFactors$(OBJ_EXT) mpi_stubs$(OBJ_EXT) \
@USE_WINDOWS_COMPILER_TRUE@	      -L. -lelmersolver viewaxis/libviewaxis.a view3d/libview3d.a $(EXTRA_LIBS) $(BLAS_LIBS)
@USE_WINDOWS_COMPILER_FALSE@	$(FC) $(SH_LINKING_TO_FLAGS) $(RPATH_ELMER) $(B64FLAGS) $(LDFLAGS) \
@USE_WINDOWS_COMPILER_FALSE@	      -o ViewFactors$(EXE_EXT) ViewFactors$(OBJ_EXT) mpi_stubs$(OBJ_EXT) \
@USE_WINDOWS_COMPILER_FALSE@	      -L. -lelmersolver viewaxis/libviewaxis.a view3d/libview3d.a $(EXTRA_LIBS) $(BLAS_LIBS) $(STDCXX_LIBS)

GebhardtFactors$(EXE_EXT): libelmersolver$(SHL_EXT) GebhardtFactors$(OBJ_EXT) mpi_stubs$(OBJ_EXT)
	$(FC) $(SH_LINKING_TO_FLAGS) $(RPATH_ELMER) $(B64FLAGS) $(LDFLAGS) \
	      -o GebhardtFactors$(EXE_EXT) GebhardtFactors$(OBJ_EXT) mpi_stubs$(OBJ_EXT) \
	      -L. -lelmersolver viewaxis/libviewaxis.a view3d/libview3d.a $(EXTRA_LIBS)

@USE_WINDOWS_COMPILER_FALSE@ResultToResult$(EXE_EXT): libelmersolver$(SHL_EXT) ResultToResult$(OBJ_EXT)
@USE_WINDOWS_COMPILER_FALSE@	$(FC) $(SH_LINKING_TO_FLAGS) $(RPATH_ELMER) $(B64FLAGS) $(LDFLAGS) \
@USE_WINDOWS_COMPILER_FALSE@	      -o ResultToResult$(EXE_EXT) ResultToResult$(OBJ_EXT) \
@USE_WINDOWS_COMPILER_FALSE@	      -L. -lelmersolver mpi_stubs$(OBJ_EXT) $(EXTRA_LIBS)
install-data-local:
	@echo "Installing solvers to ${ELMER_SOLVER_DATADIR}/lib"

	mkdir -p $(DESTDIR)$(ELMER_SOLVER_DATADIR)/lib
	$(CP) elements.def $(DESTDIR)$(ELMER_SOLVER_DATADIR)/lib
	$(CP) SOLVER.KEYWORDS $(DESTDIR)$(ELMER_SOLVER_DATADIR)/lib

	@echo "Installing *.mod to ${ELMER_SOLVER_DATADIR}/include"
	mkdir -p $(DESTDIR)$(ELMER_SOLVER_DATADIR)/include
	$(CP) *.mod $(DESTDIR)$(ELMER_SOLVER_DATADIR)/include

install-exec-local:
	@echo "Installing stuff to ${prefix}/bin"
	$(MKDIR) $(DESTDIR)$(prefix)/bin
	$(CP) ElmerSolver$(EXEEXT) $(DESTDIR)$(prefix)/bin
	$(CP) ViewFactors$(EXEEXT) $(DESTDIR)$(prefix)/bin
	$(CP) GebhardtFactors$(EXEEXT) $(DESTDIR)$(prefix)/bin
@USE_WINDOWS_COMPILER_TRUE@	$(CP) libelmersolver*$(SHL_EXT) $(DESTDIR)$(prefix)/lib
@USE_WINDOWS_COMPILER_FALSE@	$(CP) libelmersolver-$(VERSION)$(SHL_EXT) $(DESTDIR)$(prefix)/lib
@USE_WINDOWS_COMPILER_FALSE@	$(LN) -sf libelmersolver-$(VERSION)$(SHL_EXT)\
@USE_WINDOWS_COMPILER_FALSE@              $(DESTDIR)$(prefix)/lib/libelmersolver$(SHL_EXT)
	$(CP) elmerf90 elmerf90-nosh elmerld $(DESTDIR)$(prefix)/bin
@USE_MPI_TRUE@	$(CP) ElmerSolver_mpi$(EXEEXT) $(DESTDIR)$(prefix)/bin

clean-local:
	$(RM) $(ALL) *.o *.mod *.f90 *.F *.fpp *~ *.a *.so *.dll \#* mpif mpif.h ElmerSolver ElmerSolver_mpi GebhardtFactors ViewFactors

@USE_LOCAL_MPIF_H_TRUE@mpif: mpif_stub.h
@USE_LOCAL_MPIF_H_TRUE@	$(CP) mpif_stub.h mpif.h
@USE_LOCAL_MPIF_H_TRUE@	$(CP) mpif_stub.h mpif
@USE_LOCAL_MPIF_H_FALSE@mpif: mpif_stub.h
@USE_LOCAL_MPIF_H_FALSE@	$(CP) mpif_stub.h mpif

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
