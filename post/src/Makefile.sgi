
LIBDIR  =	$(ELMER_PREFIX)/lib
INCLDIR  =	$(ELMER_PREFIX)/include
BINDIR	=	$(ELMER_PREFIX)/bin
POSTDIR	=	$(ELMER_PREFIX)/post

GL_LIB		= Mesa
GL_LIB_NAME	= Mesa

GL_LIB 		=
GL_LIB_NAME	= GL

INCLUDE	=	-I. -I$(INCLDIR) -Imatc

LIBPATH	=	-Llib -L. -L$(LIBDIR)

LIBS	=	-lmatc -lcamera -lelements -lvisual -lobjects -lgraphics  -lmodule -ltk8.3 -ltcl8.3 \
			-lMesaaux -lMesatk -l$(GL_LIB)GL -l$(GL_LIB)GLU -lX11 -lXext  -lgl -lm

OBJS	=	ElmerPost.o geometry.o LUDecomp.o second.o

CC	=	cc -n32 -woff 1174,1552,1515 $(INCLUDE)
F77	=	f77

CP	=	/bin/cp
RM	= 	/bin/rm -f

.f.o:
	$(F77) -c $<

.c.o:
	$(CC)  -c  -O $<

MODS	=	screensave window

default:	ElmerPost QueryGLXExt $(MODS) install

ElmerPost:	$(OBJS)
	(cd elements;  make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(cd objects;   make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(cd visuals;   make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(cd graphics;  make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(cd camera;    make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(cd matc;      make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(cd modules;   make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(cd libGLP;   make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
#	(cd sico2elmer;  make -f Makefile.sgi sico2elmer)
	CC -n32 $(LIBPATH) -o $@ $(OBJS) $(LIBS) -LlibGLP/ -lGLP
	/bin/mv $@ bin/sgi/$@$(GL_LIB_NAME)

install:
	mkdir -p $(POSTDIR)/lib
	mkdir -p $(POSTDIR)/help
	mkdir -p $(POSTDIR)/bin
	mkdir -p $(POSTDIR)/tcl
	mkdir -p $(POSTDIR)/modules
#	mkdir -p $(POSTDIR)/sico2elmer
	$(CP) -r lib  $(POSTDIR)
	$(CP) -r help $(POSTDIR)
	$(CP) -r bin  $(POSTDIR)
	$(CP) -r tcl  $(POSTDIR)
	$(CP) -r libGLP  $(POSTDIR)
	$(CP) QueryGLXExt $(ELMER_PREFIX)/bin
	$(CP) $(MODS) $(POSTDIR)/modules
	$(CP) elmerpost $(POSTDIR)
	$(CP) elmerpost $(ELMER_PREFIX)/bin/ElmerPost
#	$(CP) sico2elmer/loadsingle $(POSTDIR)/sico2elmer/
#	$(CP) sico2elmer/sico2elmer.exe $(POSTDIR)/sico2elmer/

screensave: screensave.o
	$(CC) -shared -o $@ $@.o

window: window.o
	$(CC) -shared -o $@ $@.o

QueryGLXExt: QueryGLXExt.o
	$(CC) -o $@ $@.o -lGL -lX11 -lXext -lm

ALL:
	(cd elements; touch *.c; make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(cd objects;  touch *.c; make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(cd visuals;  touch *.c; make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(cd graphics; touch *.c; make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(cd camera;   touch *.c; make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(cd matc;     touch *.c; make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(cd modules;  touch *.c; make CFLAGS="-n32 -woff 1174,1552,1515 $(INCLUDE)")
	(             touch *.c; make -f Makefile.sgi)

clean:
	(cd elements; $(RM) *.o)
	(cd objects;  $(RM) *.o)
	(cd visuals;  $(RM) *.o)
	(cd graphics; $(RM) *.o)
	(cd camera;   $(RM) *.o)
	(cd matc;     $(RM) *.o)
	(cd modules;  $(RM) *.o)
	(cd lib;      $(RM) *.a)
	($(RM) *.o)
